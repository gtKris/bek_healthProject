@model bek_healthProject.Models.DTO.AppointmentDTO

@{
    ViewBag.Title = "Create";
}

<h2>Create Appointment</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" id="AppointmentDate" name="AppointmentDate" class="form-control" />
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentHour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AppointmentHour, new SelectList(
                new List<string>
                {
                    "7:00:00",
                    "7:30:00",
                    "8:00:00",
                    "8:30:00",
                    "9:00:00",
                    "9:30:00",
                    "10:00:00",
                    "10:30:00",
                    "11:00:00",
                    "11:30:00",
                    "13:00:00",
                    "13:30:00",
                    "14:00:00",
                    "14:30:00",
                    "15:00:00",
                    "15:30:00",
                    "16:00:00",
                    "16:30:00"

                }), "Select hour", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppointmentHour, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.CustomerId, new SelectList(
                    ViewBag.CustomerIds, "Value", "Text"), "Select Customer", new { @class = "form-control", id = "customerIdDropdown" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                <span id="customerName" class="name-span"></span>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DoctorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.DoctorId, new SelectList(
                    ViewBag.DoctorIds, "Value", "Text"), "Select Doctor", new { @class = "form-control", id = "doctorIdDropdown" })
                @Html.ValidationMessageFor(model => model.DoctorId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                <span id="doctorName" class="name-span"></span>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, new SelectList(
                    new List<string>
                    {
                        "CONFIRMED",
                    }), "Select state", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.appointment_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.appointment_type, new SelectList(
                    new List<string>
                    {
                        "Pediatrics",
                        "Cardiology",
                        "Oncology",
                        "Neurology",
                        "Gastroenterology",
                        "Orthopedics",
                        "Dermatology",
                        "Psychiatry",
                        "Obstetrics",
                        "Gynecology",
                        "Ophthalmology"
                    }), "Select Specialty", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.appointment_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">

                    <i class="fas fa-check"></i> Create

                </button>
                <a href="@Url.Action("Index")" class="btn btn-primary"><i class="fas fa-arrow-left"></i> Back to List</a>

            </div>
        </div>
    </div>

}




<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>

    <script>

              @if (TempData["ErrorMessage"] != null)
  {
      <text>
          swal({
              title: "Error",
              text: "@TempData["ErrorMessage"]",
              icon: "error",
              timer: 3000,
              buttons: false,
              animation: {
                  show: 'slideIn',
                  hide: 'slideOut'
              }
          });
      setTimeout(function () {
              @{TempData["ErrorMessage"] = null;}
              @{TempData["SuccessMessage"] = null;}
          }, 3000);
      </text>
  }

    </script>
    <script>

            $(document).ready(function () {
                $("#AppointmentDate").datepicker({
                    minDate: 0,
                    beforeShowDay: function (date) {
                        var day = date.getDay();
                        // Devuelve falso (deshabilita) si es domingo (0), de lo contrario, devuelve verdadero (habilita)
                        return [(day != 0)];
                    }
                });

                // Resto del código JavaScript...
            });


            $("#CustomerId").change(function () {
                var customerId = $(this).val();
                $.ajax({
                    url: '@Url.Action("GetCustomerNameById", "Appointment")',
                    type: 'GET',
                    data: { id: customerId },
                    success: function (data) {
                        $("#customerName").text(data);
                    }
                });
            });

            $("#DoctorId").change(function () {
                var doctorId = $(this).val();
                $.ajax({
                    url: '@Url.Action("GetDoctorNameById", "Appointment")',
                    type: 'GET',
                    data: { id: doctorId },
                    success: function (data) {
                        $("#doctorName").text(data);
                    }
                });
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $("#customerIdDropdown").change(function () {
                var customerId = $(this).val();
                $.ajax({
                    url: '@Url.Action("GetCustomerNameById", "Appointment")',
                    type: 'GET',
                    data: { id: customerId },
                    success: function (data) {
                        $("#customerName").text(data);
                    }
                });
            });

            $("#doctorIdDropdown").change(function () {
                var doctorId = $(this).val();
                $.ajax({
                    url: '@Url.Action("GetDoctorNameById", "Appointment")',
                    type: 'GET',
                    data: { id: doctorId },
                    success: function (data) {
                        $("#doctorName").text(data);
                    }
                });
            });
        });
    </script>

}



