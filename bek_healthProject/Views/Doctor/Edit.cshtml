@model bek_healthProject.Models.DTO.DoctorDTO

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>DoctorDTO</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Specialty, new SelectList(
                new List<string>
                {
                    "Pediatrics",
                    "Cardiology",
                    "Oncology",
                    "Neurology",
                    "Gastroenterology",
                    "Orthopedics",
                    "Dermatology",
                    "Psychiatry",
                    "Obstetrics",
                    "Gynecology",
                    "Ophthalmology"
                }), "Select Specialty", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <!-- This section includes scripts and stylesheets for displaying SweetAlert pop-up messages. -->

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script>
       @if (TempData["SuccessMessage"] != null)
        {
            <text>
                swal({
                    title: "Success",
                    text: "@TempData["SuccessMessage"]",
                    icon: "success",
                    timer: 3000,
                    buttons: false,
                    animation: {
                        show: 'slideIn',
                        hide: 'slideOut'
                    }
                })
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                swal({
                    title: "Error",
                    text: "@TempData["ErrorMessage"]",
                    icon: "error",
                    timer: 3000,
                    buttons: false,
                    animation: {
                        show: 'slideIn',
                        hide: 'slideOut'
                    }
                })
            </text>
        }
    </script>
}
